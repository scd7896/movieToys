{"version":3,"sources":["components/Signup.js","components/HostList.js","components/HostTable.js","components/Borrow.js","components/ReturnButton.js","components/BorrowList.js","components/AddVedio.js","App.js","serviceWorker.js","index.js"],"names":["Signup","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleCloseButton","setState","signUp","handleClick","handleValueChange","e","nextState","target","name","value","handleFormSubmit","preventDefault","addHosts","then","res","stateRefresh","hostname","hostphone","hosthome","formData","FormData","append","state","post","headers","content-type","hostnumber","react_default","a","createElement","DialogActions_default","Button_default","variant","color","onClick","Dialog_default","open","onClose","DialogTitle_default","DialogContent_default","TextField_default","type","label","onChange","Component","HostList","returnHost","onCreate","console","log","TableRow_default","id","key","TableCell_default","gradename","HostTable","clickHandling","openD","closeHandling","Table_default","TableHead_default","TableBody_default","hostTable","map","c","index","components_HostList","components_Signup","Borrow","borrow","subClicking","subClick","handleSubClose","mycallback","dataFromChild","uploadingForId","clickTest","_this2","ReturnButton","good","returnVideo","BorrowList","movietitle","moviecost","genrename","components_ReturnButton","AddVedio","handling","event","clickClose","copytype","clickHanling","addVedios","FormControl_default","component","FormLabel_default","RadioGroup_default","aria-label","FormControlLabel_default","control","Radio_default","App","callApi2","asyncToGenerator","regenerator_default","mark","_callee","response","body","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","callApi","_callee2","_context2","borrowTable","completed","searchKeyword","catch","err","components_HostTable","components_Borrow","components_AddVedio","components_BorrowList","Boolean","window","location","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ae037ab6.chunk.js","sourcesContent":["import React, { Component} from 'react';\r\nimport { post } from 'axios';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport './css/Sign.css'\r\nclass Signup extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          signUp : false,\r\n          hostname :'',\r\n          hostnumber : '',\r\n          hostphone : '',\r\n          hosthome : ''\r\n        }\r\n      }\r\n      handleCloseButton = () =>{\r\n        this.setState({\r\n            signUp : false\r\n        })\r\n      }\r\n      handleClick = () =>{\r\n        this.setState({\r\n            signUp : true\r\n        })\r\n      }\r\n      handleValueChange = (e)=>{\r\n        let nextState = {};\r\n        nextState[e.target.name] = e.target.value;\r\n        this.setState(nextState);\r\n        \r\n    }\r\n    handleFormSubmit = (e) =>{\r\n      e.preventDefault();\r\n      this.addHosts()\r\n          .then((res)=>{\r\n              this.props.stateRefresh();\r\n          })\r\n          this.setState({\r\n            signUp : false,\r\n            hostname :'',\r\n            hostphone : '',\r\n            hosthome : ''\r\n          })\r\n  }\r\n  addHosts = () =>{\r\n    const url = 'api/hostadd';\r\n    let formData = new FormData();\r\n    formData.append('hostname', this.state.hostname);\r\n    formData.append('hostphone', this.state.hostphone);\r\n    formData.append('hosthome', this.state.hosthome);\r\n    \r\n    const config = {\r\n        headers :{\r\n            'content-type' :'multipart/form-data'\r\n        }\r\n    }\r\n    return post(url, formData, config);\r\n}\r\n    render(){\r\n        return(\r\n            <DialogActions>\r\n        <Button variant = \"contained\" color = \"primary\" onClick ={this.handleClick}> 회원가입</Button>\r\n        <Dialog open ={this.state.signUp} onClose = {this.handleCloseButton}>\r\n          <DialogTitle> 회원가입</DialogTitle>\r\n          <DialogContent>\r\n          <div><TextField value = {this.state.hostname} type =\"text\" name=\"hostname\" label =\"이름\" onChange = {this.handleValueChange}></TextField></div>\r\n          <div><TextField value = {this.state.hostphone} type =\"text\" name=\"hostphone\" label =\"핸드폰\" onChange = {this.handleValueChange}></TextField></div>\r\n          <div><TextField value = {this.state.hosthome} type =\"text\" name=\"hosthome\" label =\"주소\" onChange = {this.handleValueChange}></TextField></div>\r\n          </DialogContent>\r\n          <DialogActions>\r\n          <Button variant=\"contained\" color =\"primary\" onClick = {this.handleFormSubmit}>회원가입</Button> \r\n          <Button variant=\"contained\" onClick = {this.handleCloseButton}>취소하기</Button>\r\n          </DialogActions>\r\n          \r\n          </Dialog>\r\n        \r\n          </DialogActions>\r\n        )\r\n    }\r\n}\r\nexport default Signup;","import React,{component} from 'react'\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport { Component } from 'react';\r\nimport Button from '@material-ui/core/Button'\r\nclass HostList extends Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    returnHost = () =>{\r\n        this.props.onCreate(this.props);\r\n        console.log(this.props);\r\n    }\r\n    render(){\r\n        return(\r\n            <TableRow onClick ={this.returnHost} id = {this.props.key}>\r\n                <TableCell>{this.props.hostname}</TableCell>\r\n                <TableCell>{this.props.hosthome}</TableCell>\r\n                <TableCell>{this.props.hostphone}</TableCell>\r\n                <TableCell>{this.props.gradename}</TableCell>\r\n                \r\n            </TableRow>\r\n        )\r\n    }\r\n   \r\n}\r\n\r\nexport default HostList","import React,{ Component}from 'react';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport Table from '@material-ui/core/Table';\r\nimport Signup from './Signup';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport HostList from './HostList'\r\nclass HostTable extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            openD: false\r\n        }\r\n    }\r\n    \r\n  \r\n    clickHandling = ()=>{\r\n        this.setState({\r\n            openD : true\r\n        })\r\n    }\r\n    closeHandling = () =>{\r\n        this.setState({\r\n            openD: false\r\n        })\r\n    }\r\n    render(){\r\n        const callTable = (data)=>{\r\n            return data.map((c, index)=>{\r\n              return(\r\n                <HostList hostname ={c.hostname} hosthome = {c.hosthome} hostphone = {c.hostphone} gradename = {c.gradename}\r\n                    key = {index}></HostList>\r\n              )\r\n            })\r\n          }\r\n        return(\r\n            <TableCell>\r\n                <Button variant=\"contained\" color = \"primary\" onClick = {this.clickHandling}>회원리스트보기</Button>\r\n                <Dialog open ={this.state.openD} onClose = {this.closeHandling}>\r\n                    <DialogTitle>회원 리스트</DialogTitle>\r\n                    <DialogContent>\r\n                        <Table>\r\n                            <TableHead>\r\n                                <TableRow>\r\n                                    <TableCell> 이름</TableCell>\r\n                                    <TableCell>주소</TableCell>\r\n                                    <TableCell>연락처</TableCell>\r\n                                    <TableCell>회원등급</TableCell>\r\n                                </TableRow>\r\n                            </TableHead>\r\n                            <TableBody>\r\n                                {this.props.hostTable ? callTable(this.props.hostTable) : \"데이터를 불러오는중\"}\r\n                            </TableBody>\r\n                        </Table>\r\n                    </DialogContent>\r\n                   <Signup stateRefresh = {this.props.stateRefresh}></Signup>\r\n                </Dialog>\r\n            </TableCell>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HostTable;","import React,{ Component } from \"react\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport HostList from \"./HostList\";\r\nimport Table from \"@material-ui/core/Table\"\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nclass Borrow extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n          borrow : false,\r\n          subClick : false,\r\n          uploadingForId : null,\r\n        }\r\n      }\r\n      handleCloseButton = () =>{\r\n        this.setState({\r\n            borrow : false\r\n        })\r\n      }\r\n      handleClick = () =>{\r\n        this.setState({\r\n            borrow : true\r\n        })\r\n      }\r\n      subClicking = () =>{\r\n          this.setState({\r\n            subClick : true\r\n          })\r\n      }\r\n      handleSubClose = () =>{\r\n          this.setState ({\r\n            subClick: false\r\n          })\r\n      }\r\n      mycallback = (dataFromChild)=>{\r\n          this.setState({\r\n            uploadingForId : dataFromChild.hostnumber,\r\n            subClick: false\r\n          });\r\n          console.log(this.state.uploadingForId);\r\n      }\r\n      clickTest = () =>{\r\n          this.setState({\r\n              borrow : false\r\n          })\r\n          console.log(this.state.uploadingForId)\r\n      }\r\n    render(){\r\n        const callTable = (data)=>{\r\n            return data.map((c, index)=>{\r\n              return(\r\n                <HostList onCreate = {this.mycallback} hostname ={c.hostname} hosthome = {c.hosthome} hostphone = {c.hostphone} gradename = {c.gradename}\r\n                    hostnumber = {c.hostnumber}></HostList>\r\n              )\r\n            })\r\n          }\r\n        return(\r\n            <TableCell>\r\n                <Button variant=\"contained\" color =\"primary\" onClick ={this.handleClick}>\r\n                    비디오 빌리기\r\n                </Button>\r\n                <Dialog open ={this.state.borrow} onClose = {this.handleCloseButton}>\r\n                    <DialogTitle> 비디오 대여</DialogTitle>\r\n                    <DialogContent>\r\n                        <TextField label = \"id\" value = {this.uploadingForId}>{this.uploadingForId}</TextField>\r\n                        <TextField></TextField>\r\n                        <Button onClick = {this.subClicking}>이름으로 검색</Button>\r\n                        <Dialog open ={this.state.subClick} onClose={this.handleSubClose}>\r\n                            <DialogTitle>회원 정보</DialogTitle>\r\n                            <DialogContent>\r\n                                <Table>\r\n                                    <TableBody>\r\n                                        {this.props.hostTable ? callTable(this.props.hostTable) : \"데이터를 불러오는중\"}\r\n                                    </TableBody>\r\n                                </Table>\r\n                            </DialogContent>\r\n                        </Dialog>\r\n                        <Button onClick = {this.clickTest}>확인</Button>\r\n                    </DialogContent>\r\n                    <DialogActions></DialogActions>\r\n                </Dialog>\r\n            </TableCell>\r\n        )\r\n    }\r\n}\r\nexport default Borrow;","import React,{Component} from 'react';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nclass ReturnButton extends Component{\r\n    state = {\r\n        good : false\r\n    }\r\n    handleCloseButton = () =>{\r\n        this.setState({\r\n            good : false\r\n        })\r\n      }\r\n      handleClick = () =>{\r\n        this.setState({\r\n            good : true\r\n        })\r\n      }\r\n      returnVideo = () =>{\r\n          this.setState({\r\n              good:false\r\n          })\r\n      }\r\n    render(){\r\n        return(\r\n            <div>\r\n                    <Button variant = \"contained\" color = \"primary\" onClick ={this.handleClick}> 비디오반납</Button>\r\n                    <Dialog open = {this.state.good} onClose = {this.handleCloseButton}>\r\n                        <DialogTitle> 반납확인</DialogTitle>\r\n                        <DialogContent>반납하시겠습니까??</DialogContent>\r\n                        <Button onClick = {this.returnVideo}>확인</Button><Button onClick = {this.handleCloseButton}>취소</Button>\r\n\r\n                    </Dialog>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ReturnButton;","import React,{Component} from \"react\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport ReturnButton from './ReturnButton';\r\n\r\nclass BorrowList extends Component{\r\n   constructor(props){\r\n       super(props)\r\n           this.setState({\r\n               good : true\r\n           })\r\n       }\r\n       \r\n      handleCloseButton = () =>{\r\n        this.setState({\r\n            good : false\r\n        })\r\n      }\r\n      handleClick = () =>{\r\n        this.setState({\r\n            good : true\r\n        })\r\n      }\r\n   \r\n    render(){\r\n        return(\r\n                <TableRow>\r\n                    <TableCell>{this.props.movietitle}</TableCell>\r\n                    <TableCell>{this.props.moviecost}</TableCell>\r\n                    <TableCell>{this.props.genrename}</TableCell> \r\n                    <ReturnButton></ReturnButton>\r\n                </TableRow>\r\n        )\r\n    }\r\n}\r\nexport default BorrowList;","import React,{Component} from \"react\";\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport Radio from '@material-ui/core/Radio'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\r\nimport RadioGroup from '@material-ui/core/RadioGroup'\r\nimport FormLabel from '@material-ui/core/FormLabel'\r\nimport { post } from 'axios';\r\n\r\nclass AddVedio extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state ={\r\n            movietitle :'',\r\n            copytype : '',\r\n            handling : false,\r\n        }\r\n    }\r\n    handleClick =() =>{\r\n        this.setState({\r\n            handling : true\r\n        })\r\n    }\r\n    handleValueChange = (event)=>{\r\n       \r\n        this.setState({\r\n            movietitle : event.target.value\r\n        });\r\n    \r\n    }\r\n    clickClose = () =>{\r\n        this.setState({\r\n            handling : false\r\n        })\r\n        console.log(this.state.movietitle);\r\n        console.log(this.state.copytype)\r\n    }\r\n    clickHanling = (e) =>{\r\n        this.setState({\r\n            copytype : e.target.value\r\n        });\r\n    }\r\n    handleFormSubmit = (e) =>{\r\n        \r\n        e.preventDefault();\r\n        this.addVedios()\r\n            .then((res)=>{\r\n                this.props.stateRefresh();\r\n            })\r\n            this.setState({\r\n                movietitle :'',\r\n                copytype : '',\r\n                handling : false,\r\n            })\r\n    }\r\n    addVedios = () =>{\r\n        \r\n        const url = 'api/vedioadd';\r\n        let formData = new FormData();\r\n        formData.append('movietitle', this.state.movietitle);\r\n        formData.append('copytype', this.state.copytype);\r\n       \r\n        const config = {\r\n            headers :{\r\n                'content-type' :'multipart/form-data'\r\n            }\r\n        }\r\n        return post(url, formData, config);\r\n    }\r\n\r\n \r\n    render(){\r\n        return(\r\n        <TableCell>\r\n            <Button variant=\"contained\" color =\"primary\" onClick ={this.handleClick}>\r\n                비디오 추가하기\r\n            </Button>\r\n            <Dialog open ={this.state.handling} onClose = {this.handleCloseButton}>\r\n                <DialogTitle> 비디오 대여</DialogTitle>\r\n                <DialogContent>\r\n                    <div><TextField value = {this.state.movietitle} type =\"text\" name=\"movietitle\" label =\"영화이름\" onChange = {this.handleValueChange}></TextField></div>\r\n                    <FormControl component=\"fieldset\">\r\n                        <FormLabel component=\"legend\">복사 양식</FormLabel>\r\n                        <RadioGroup\r\n                            aria-label=\"복사 양식\"\r\n                            name = \"copytype\"\r\n                        >\r\n                            <FormControlLabel value=\"DVD\" control={<Radio />} label=\"DVD\" onClick ={this.clickHanling}/>\r\n                            <FormControlLabel value=\"CD\" control={<Radio />} label=\"CD\" onClick ={this.clickHanling}/>\r\n                            <FormControlLabel value=\"블루레이\" control={<Radio />} label=\"블루레이\" onClick ={this.clickHanling}/>\r\n                            <FormControlLabel value=\"비디오\" control={<Radio />} label=\"비디오\" onClick ={this.clickHanling}/>\r\n                        </RadioGroup>\r\n                        </FormControl>\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    <Button onClick = {this.handleFormSubmit}>추가하기</Button>\r\n                    <Button onClick = {this.clickClose}>취소하기</Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n        </TableCell>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddVedio;\r\n\r\n\r\n","import React, {Component} from 'react';\n\nimport HostTable from './components/HostTable'\nimport Borrow from './components/Borrow';\nimport BorrowList from './components/BorrowList';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport Table from '@material-ui/core/Table';\nimport AddVedio from './components/AddVedio';\n\n\nconst styles = theme =>({\n  hidden :{\n    display : 'none'\n  }\n})\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n      this.state ={\n        borrowTable : '',\n        hostTable : '',\n        searchKeyword : ''\n      }\n    \n  }\n  componentDidMount(){\n    this.callApi()\n      .then(res=> this.setState({borrowTable : res}))\n      .catch(err => console.log(err));\n    this.callApi2()\n        .then(res => this.setState({\n          hostTable : res\n        }))\n      .catch(err=>console.log(err));\n  }\n  callApi2 = async() =>{\n    const response = await fetch('/api/hosts');\n    const body = await response.json();\n    return body;\n}\n  callApi = async()=>{\n    const response = await fetch('/api/users');\n    const body = await response.json();\n    return body;\n  }\n\n  stateRefresh = () =>{\n    this.setState({\n      hostTable: '',\n      borrowTable : '',\n      completed: 0,\n      searchKeyword : ''\n    })\n    this.callApi()\n      .then(res => this.setState({borrowTable : res}))\n      .catch(err => console.log(err));\n    this.callApi2()\n    .then(res => this.setState({hostTable : res}))\n    .catch(err => console.log(err));\n  }\n\n  render(){\n    const callTable = (data)=>{\n      return data.map((c,index)=>{\n        return(\n          <BorrowList  movietitle = {c.movietitle} moviecost = {c.moviecost}\n          genrename = {c.genrename} hostnumber = {c.hostnumber}></BorrowList>\n        )\n      })\n    }\n  \n\n    return (\n      <div>\n        <Table>\n          <TableHead>\n            <TableRow>\n              <HostTable stateRefresh ={this.stateRefresh} hostTable ={this.state.hostTable}></HostTable>\n              <Borrow hostTable ={this.state.hostTable}></Borrow>\n              <AddVedio stateRefresh = {this.stateRefresh}></AddVedio>\n            </TableRow>\n          </TableHead>\n        </Table>\n        <Table>\n        <TableHead>\n            <TableRow>\n              <TableCell>영화제목</TableCell>\n              <TableCell>영화가격</TableCell>\n              <TableCell>장르</TableCell>\n              <TableCell>반납</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n              {this.state.borrowTable ? callTable(this.state.borrowTable) : \"데이터를 불러오는중\"  }\n          </TableBody>\n        </Table>\n      \n        \n        \n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}